# Copyright (C) 2024, Nuklai. All rights reserved.
# See the file LICENSE for licensing terms.

name: NuklaiVM CI
on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  nuklaivm-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: ./.github/actions/install-go
        with:
          cache-dependency-path: |
            go.sum
      - name: Run static analysis tests
        shell: bash
        run: scripts/lint.sh
      - name: Build vm, cli
        shell: bash
        run: scripts/build.sh

  nuklaivm-unit-tests:
    # runs-on: ubuntu-20.04-32
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: ./.github/actions/install-go
        with:
          cache-dependency-path: |
            go.sum
      - name: Run unit tests
        shell: bash
        run: scripts/tests.unit.sh
      - name: Run integration tests
        shell: bash
        run: scripts/tests.integration.sh

  # nuklaivm-e2e-tests:
  #   needs: [nuklaivm-lint, nuklaivm-unit-tests]
  #   runs-on: ubuntu-20.04-32
  #   timeout-minutes: 25
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Set up Go
  #       uses: ./.github/actions/install-go
  #       with:
  #         cache-dependency-path: |
  #           go.sum
  #     - name: Run e2e tests
  #       shell: bash
  #       run: scripts/run.sh
  #       env:
  #         MODE: 'test'
  #     - name: Upload tmpnet network dir
  #       uses: ava-labs/avalanchego/.github/actions/upload-tmpnet-artifact@v1-actions
  #       if: always()
  #       with:
  #         name: nuklaivm-e2e-tmpnet-data

  # nuklaivm-release:
  #   #needs: [nuklaivm-e2e-tests]
  #   # We build with 20.04 to maintain max compatibility: https://github.com/golang/go/issues/57328
  #   runs-on: ubuntu-20.04-32
  #   permissions:
  #     contents: write
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - uses: ./.github/actions/vm-release
  #       with:
  #         vm-name: nuklaivm
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
